version: 2.1

parameters:
  GHA_Action:
    type: string
    default: ""
  should_release:
    type: boolean
    default: false

orbs:
  macos: circleci/macos@2.5.4
  android: circleci/android@3.1.0
  codecov: codecov/codecov@5.4.3

executors:
  base:
    docker:
      - image: docker.io/playerui/bazel-docker:13
    working_directory: ~/player
    resource_class: xlarge
    environment:
      TZ: "/usr/share/zoneinfo/America/Los_Angeles"
  minimal:
    docker:
      - image: cimg/base:current
    working_directory: ~/player
    resource_class: medium
    environment:
      TZ: "/usr/share/zoneinfo/America/Los_Angeles"
  ios:
    working_directory: ~/player
    resource_class: m4pro.medium
    macos:
      xcode: 16.4.0
    environment:
      TZ: "/usr/share/zoneinfo/America/Los_Angeles"
  android:
    machine:
      image: android:2024.04.1
    working_directory: ~/player
    resource_class: xlarge
    environment:
      TZ: "/usr/share/zoneinfo/America/Los_Angeles"
  benchmarks:
    docker:
      - image: docker.io/playerui/bazel-docker:13
    working_directory: ~/player
    resource_class: large
    environment:
      TZ: "/usr/share/zoneinfo/America/Los_Angeles"

commands:
  auto_shipit:
    description: Perform Auto shipit
    steps:
      - attach_workspace:
          at: ~/player
      - restore_cache:
          keys:
            - "v1-bazel-cache-core-{{ .Branch }}-{{ .Revision }}"
            - "v1-bazel-cache-core-{{ .Branch }}"
            - "v1-bazel-cache-core-main"
            - 'gem-v1-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile.lock" }}'
            - 'gem-v1-{{ arch }}-main-{{ checksum "Gemfile.lock" }}'

      - add_ssh_keys:
          fingerprints:
            - "SHA256:hUAWVYdfSW5ml6ufbfyEHUcuPwUJ88xVhsZc21b2lA8"

      - run: mkdir -p ~/.ssh/ && echo -e "Host github.com\n\tStrictHostKeyChecking no\n" > ~/.ssh/config
      - run: echo "//registry.npmjs.com/:_authToken=$NPM_TOKEN" >> ~/.npmrc
      - run: git config --global user.name "Intuit Service"
      - run: git config --global user.email "opensource-svc@intuit.com"
      - run: |
          echo -e "$GPG_KEY" | gpg --import --batch
          echo -e "pinentry-mode loopback\npassphrase $DEPLOY_MAVEN_GPG_PASSPHRASE" > ~/.gnupg/gpg.conf
      - run: |
          source ~/.bashrc
          bundle install
          npx auto shipit --only-graduate-with-release-label -vv

jobs:
  setup:
    executor: minimal
    steps:
      - checkout

      - restore_cache:
          keys:
            - 'v1-dependencies-{{ checksum "package.json" }}'

      - persist_to_workspace:
          root: .
          paths:
            - .

  bazelrc:
    executor: minimal
    steps:
      - attach_workspace:
          at: ~/player
      - run: |
          echo "build --remote_header=x-buildbuddy-api-key=${BUILDBUDDY_API_KEY}" >> .bazelrc.local
          echo "test --remote_header=x-buildbuddy-api-key=${BUILDBUDDY_API_KEY}" >> .bazelrc.local
          echo "coverage --remote_header=x-buildbuddy-api-key=${BUILDBUDDY_API_KEY}" >> .bazelrc.local
          echo "common --remote_upload_local_results" >> .bazelrc.local
      - persist_to_workspace:
          root: .
          paths:
            - .
  bazelrc_fork:
    executor: minimal
    steps:
      - attach_workspace:
          at: ~/player
      - run: |
          echo "build --bes_results_url=''" >> .bazelrc.local
          echo "build --bes_backend=''" >> .bazelrc.local
          echo "build --remote_cache=''" >> .bazelrc.local
          echo "test --bes_results_url=''" >> .bazelrc.local
          echo "test --bes_backend=''" >> .bazelrc.local
          echo "test --remote_cache=''" >> .bazelrc.local
          echo "coverage --bes_results_url=''" >> .bazelrc.local
          echo "coverage --bes_backend=''" >> .bazelrc.local
          echo "coverage --remote_cache=''" >> .bazelrc.local
      - persist_to_workspace:
          root: .
          paths:
            - .

  build:
    executor: base
    steps:
      - attach_workspace:
          at: ~/player

      - run: bazel build --config=ci -- $(bazel query 'filter("native_bundle$", //...)')

      - save_cache:
          paths:
            - node_modules
          key: 'v1-dependencies-{{ checksum "package.json" }}'

      - persist_to_workspace:
          root: .
          paths:
            - .

  build_ios:
    executor: ios
    steps:
      - attach_workspace:
          at: ~/player

      - run:
          name: Homebrew Dependencies
          command: |
            HOMEBREW_NO_AUTO_UPDATE=1 brew install bazelisk lcov

      - macos/preboot-simulator:
          version: "18.5"
          platform: "iOS"
          device: "iPhone 16 Pro"

      - run: bazel build --config=ci-mac -- //ios/demo:PlayerUIDemo

      - run:
          name: Test Prebuild
          command: |
            bazel build \
              --config=ci-mac \
              $(bazel query "kind(ios_unit_test, //ios/...)") \
              $(bazel query "kind(ios_unit_test, //plugins/...)") \
              $(bazel query "kind(ios_ui_test, //ios/...)") \
              $(bazel query "kind(ios_ui_test, //plugins/...)") \
              $(bazel query "attr(name, '.*SwiftLint', //ios/...)") \
              $(bazel query "attr(name, '.*SwiftLint', //plugins/...)")
      - run:
          name: Tests
          command: |
            bazel coverage \
              --config=ci-mac \
              --jobs=1 \
              --experimental_use_llvm_covmap \
              --combined_report=lcov \
              --test_output=all \
              --test_timeout=1800 \
              $(bazel query "kind(ios_unit_test, //ios/...)") \
              $(bazel query "kind(ios_unit_test, //plugins/...)") \
              $(bazel query "kind(ios_ui_test, //ios/...)") \
              $(bazel query "kind(ios_ui_test, //plugins/...)")
      - run:
          name: Lint
          command: |
            bazel test \
              --config=ci-mac \
              $(bazel query "attr(name, '.*SwiftLint', //ios/...)") \
              $(bazel query "attr(name, '.*SwiftLint', //plugins/...)")

      - run:
          when: always
          command: |
            RESULTS_DIR=_test_results
            find -L ./bazel-testlogs -name test.xml | while read line
            do
              mkdir -p $RESULTS_DIR/$(dirname $line)
              cp $line $RESULTS_DIR/$(dirname $line)
            done
      - run:
          when: always
          command: |
            mkdir -p _ios_coverage/lcov
            cp -r $(bazel info output_path)/_coverage/_coverage_report.dat _ios_coverage/lcov/

      - persist_to_workspace:
          root: .
          paths:
            - _ios_coverage

      - store_test_results:
          path: _test_results

  test:
    executor: base
    steps:
      - attach_workspace:
          at: ~/player

      - run: bazel build --config=ci -- $(bazel query 'kind(".*_test", //...) except filter("ios|swiftui", //...)') -//android/demo:android_instrumentation_test

      - run: bazel test --config=ci -- $(bazel query 'kind(".*_test", //...) except filter("ios|swiftui", //...)') -//android/demo:android_instrumentation_test

      - run:
          when: always
          command: |
            RESULTS_DIR=_test_results
            find -L ./bazel-testlogs -name test.xml | while read line
            do
              mkdir -p $RESULTS_DIR/$(dirname $line)
              cp $line $RESULTS_DIR/$(dirname $line)
            done

      - store_test_results:
          path: _test_results

  android_test:
    executor: android
    steps:
      - checkout

      - attach_workspace:
          at: ~/player

      - run:
          name: Install Bazel
          command: |
            wget -q https://github.com/bazelbuild/bazelisk/releases/download/v1.11.0/bazelisk-linux-amd64 -O bazelisk && \
            chmod +x bazelisk && \
            sudo mkdir /opt/bazelisk-v1.11.0 && \
            sudo mv bazelisk /opt/bazelisk-v1.11.0 && \
            sudo ln -s /opt/bazelisk-v1.11.0/bazelisk /usr/local/bin/bazel

      - run: ./scripts/android-ci-bazel-test.sh //android/demo:android_instrumentation_test

      - run:
          when: always
          command: |
            RESULTS_DIR=_test_results
            find -L ./bazel-testlogs -name test.xml | while read line
            do
              mkdir -p $RESULTS_DIR/$(dirname $line)
              cp $line $RESULTS_DIR/$(dirname $line)
            done

      - store_test_results:
          path: _test_results

      - store_artifacts:
          path: screenshots

  coverage:
    executor: base
    steps:
      - attach_workspace:
          at: ~/player

      - restore_cache:
          keys:
            - "v1-bazel-cache-core-{{ .Branch }}-{{ .Revision }}"
            - "v1-bazel-cache-core-{{ .Branch }}"
            - "v1-bazel-cache-core-main"

      - run: |
          BUNDLE_TARGETS=$(bazel query "kind(.*_test, //...) except filter('android|ios|swiftui', //...)" --output label 2>/dev/null | tr '\n' ' ')
          bazel coverage --combined_report=lcov --config=ci -- $BUNDLE_TARGETS

      - run:
          when: always
          command: |
            RESULTS_DIR=_test_results
            find -L ./bazel-testlogs -name test.xml | while read line
            do
              mkdir -p $RESULTS_DIR/$(dirname $line)
              cp $line $RESULTS_DIR/$(dirname $line)
            done

      - store_test_results:
          path: _test_results

      - codecov/upload:
          files: ./bazel-out/_coverage/_coverage_report.dat,./_ios_coverage/lcov/_coverage_report.dat

  maybe_release:
    executor: base
    steps:
      - attach_workspace:
          at: ~/player
      - run: echo "Should I release? (<< pipeline.parameters.should_release >>)"
      - when:
          condition: << pipeline.parameters.should_release >>
          steps:
            - auto_shipit

  release:
    executor: base
    steps:
      - attach_workspace:
          at: ~/player
      - auto_shipit

  bench_js:
    executor: benchmarks
    steps:
      - attach_workspace:
          at: ~/player

      - run: |
          bazel query 'filter(".*_vitest_bench$", //...)' --output label 2>/dev/null | tr '\n' ' ' | xargs -r -n 1 bazel run --config=ci-benchmark

  build_docs:
    executor: base
    steps:
      - attach_workspace:
          at: ~/player
      - restore_cache:
          keys:
            - "v1-bazel-cache-core-{{ .Branch }}-{{ .Revision }}"
            - "v1-bazel-cache-core-{{ .Branch }}"
            - "v1-bazel-cache-core-main"
      - add_ssh_keys:
          fingerprints:
            - "SHA256:hUAWVYdfSW5ml6ufbfyEHUcuPwUJ88xVhsZc21b2lA8"
      - run: mkdir -p ~/.ssh/ && echo -e "Host github.com\n\tStrictHostKeyChecking no\n" > ~/.ssh/config
      - run: git config --global user.name "Intuit Service"
      - run: git config --global user.email "opensource-svc@intuit.com"
      - run:
          name: Check if docs should build
          command: |
            if [ "<< pipeline.parameters.GHA_Action >>" = "docs" ] || [ "<< pipeline.parameters.should_release >>" = "true" ]; then
              echo "Building docs for << pipeline.parameters.GHA_Action >>"
            else
              echo "Skipping docs build - not requested"
              exit 0
            fi
      - run: |
          bazel build --config=release //docs:gh_deploy

          # Only deploy and comment if this is a PR
          if [ -n "$CIRCLE_PULL_REQUEST" ]; then
            PR_NUMBER=$(echo "$CIRCLE_PULL_REQUEST" | sed -E 's|.*/pull/([0-9]+).*|\1|')
            STABLE_DOCS_BASE_PATH="pr/$PR_NUMBER" \
            STABLE_ALGOLIA_SEARCH_API_KEY="$ALGOLIA_NEXT_SEARCH_API_KEY" \
            STABLE_ALGOLIA_SEARCH_APPID="D477I7TDXB" \
            STABLE_ALGOLIA_SEARCH_INDEX="crawler_Player (Next)" \
            bazel run --config=release //docs:gh_deploy -- --dest_dir "pr/$PR_NUMBER"
            PR_URL="https://player-ui.github.io/pr/$PR_NUMBER/"
            source ~/.bashrc
            bundle install
            npx auto comment --message "### Build Preview

            🚀 Docs preview: $PR_URL" --context "build-preview"
          else
            echo "Non-PR branch - docs built, deployment handled by docs_release job"
          fi

  docs_release:
    executor: base
    steps:
      - attach_workspace:
          at: ~/player
      - restore_cache:
          keys:
            - "v1-bazel-cache-core-{{ .Branch }}-{{ .Revision }}"
            - "v1-bazel-cache-core-{{ .Branch }}"
            - "v1-bazel-cache-core-main"

      - add_ssh_keys:
          fingerprints:
            - "SHA256:hUAWVYdfSW5ml6ufbfyEHUcuPwUJ88xVhsZc21b2lA8"

      - run: mkdir -p ~/.ssh/ && echo -e "Host github.com\n\tStrictHostKeyChecking no\n" > ~/.ssh/config
      - run: git config --global user.name "Intuit Service"
      - run: git config --global user.email "opensource-svc@intuit.com"

      - run: |
          echo "Deploying docs for release"

          # If GHA_Action = "release" + main branch -> full release (deploy to latest/)
          # If GHA_Action = "" + main branch -> next release (deploy to next/)
          if [ "<< pipeline.parameters.GHA_Action >>" = "release" ] && [ "$CIRCLE_BRANCH" = "main" ]; then
            echo "Full release detected - deploying to latest/"
            STABLE_DOCS_BASE_PATH="latest" \
            STABLE_ALGOLIA_SEARCH_API_KEY=$ALGOLIA_SEARCH_API_KEY \
            STABLE_ALGOLIA_SEARCH_APPID="OX3UZKXCOH" \
            STABLE_ALGOLIA_SEARCH_INDEX="player-ui" \
            bazel run --config=release //docs:gh_deploy -- --dest_dir "latest"
            
            echo "Docs deployed to: https://player-ui.github.io/latest/"
          elif [ "<< pipeline.parameters.GHA_Action >>" = "" ] && [ "$CIRCLE_BRANCH" = "main" ]; then
            echo "Next release detected - deploying to next/"
            STABLE_DOCS_BASE_PATH="next" \
            STABLE_ALGOLIA_SEARCH_API_KEY="$ALGOLIA_NEXT_SEARCH_API_KEY" \
            STABLE_ALGOLIA_SEARCH_APPID="D477I7TDXB" \
            STABLE_ALGOLIA_SEARCH_INDEX="crawler_Player (Next)" \
            bazel run --config=release //docs:gh_deploy -- --dest_dir "next"
            
            echo "Docs deployed to: https://player-ui.github.io/next/"
          else
            echo "No docs deployment needed for this context"
          fi

          # Also deploy to the versioned folder for releases
          if [ "<< pipeline.parameters.GHA_Action >>" = "release" ]; then
            SEMVER_MAJOR=$(cat VERSION | cut -d. -f1)
            echo "Deploying versioned docs to: $SEMVER_MAJOR"
            STABLE_DOCS_BASE_PATH="$SEMVER_MAJOR" \
            STABLE_ALGOLIA_SEARCH_API_KEY=$ALGOLIA_SEARCH_API_KEY \
            STABLE_ALGOLIA_SEARCH_APPID="OX3UZKXCOH" \
            STABLE_ALGOLIA_SEARCH_INDEX="player-ui" \
            bazel run --config=release //docs:gh_deploy -- --dest_dir "$SEMVER_MAJOR"
            
            echo "Versioned docs deployed to: https://player-ui.github.io/$SEMVER_MAJOR/"
          fi

workflows:
  build_and_test_pr:
    jobs:
      - setup:
          filters:
            branches:
              ignore:
                - main
                - /version-.*/
            tags:
              ignore: /.*/
      - bazelrc:
          filters:
            branches:
              ignore:
                - /pull\/.*/
          context:
            - Build
          requires:
            - setup

      - bazelrc_fork:
          filters:
            branches:
              only:
                - /pull\/.*/
          requires:
            - setup

      - build:
          name: build-trunk
          filters:
            branches:
              ignore:
                - /pull\/.*/
          requires:
            - bazelrc

      - build:
          name: build-fork
          filters:
            branches:
              only:
                - /pull\/.*/
          requires:
            - setup
            - bazelrc_fork

      - build_ios:
          name: build-ios-trunk
          filters:
            branches:
              ignore:
                - /pull\/.*/
          requires:
            - bazelrc
            - build-trunk

      - build_ios:
          name: build-ios-fork
          filters:
            branches:
              only:
                - /pull\/.*/
          requires:
            - build-fork
            - bazelrc_fork

      - maybe_release:
          context:
            - Publish
          requires:
            - build-trunk
            - build-ios-trunk

      - test:
          name: test-trunk
          filters:
            branches:
              ignore:
                - /pull\/.*/
          requires:
            - build-trunk

      - test:
          name: test-fork
          filters:
            branches:
              only:
                - /pull\/.*/
          requires:
            - build-fork

      - android_test:
          name: android-test-trunk
          filters:
            branches:
              ignore:
                - /pull\/.*/
          context:
            - Build
          requires:
            - build-trunk

      - android_test:
          name: android-test-fork
          context:
            - BuildFork
          filters:
            branches:
              only:
                - /pull\/.*/
          requires:
            - build-fork

      - coverage:
          name: coverage-trunk
          filters:
            branches:
              ignore:
                - /pull\/.*/
          requires:
            - build-trunk
            - build-ios-trunk

      - coverage:
          name: coverage-fork
          filters:
            branches:
              only:
                - /pull\/.*/
          requires:
            - build-fork
            - build-ios-fork

      - bench_js:
          name: js-benchmark-tests-trunk
          filters:
            branches:
              ignore:
                - /pull\/.*/
          requires:
            - build-trunk

      - build_docs:
          name: build-docs-trunk
          context:
            - Publish
          requires:
            - bazelrc

      - build_docs:
          name: build-docs-fork
          context:
            - Publish
          requires:
            - bazelrc_fork

  build_and_test_main:
    when:
      equal: ["", << pipeline.parameters.GHA_Action >>]
    jobs:
      - setup:
          filters:
            branches:
              only:
                - main
                - /version-.*/
      - bazelrc:
          context:
            - Build
          requires:
            - setup

      - build:
          requires:
            - bazelrc

      - build_ios:
          requires:
            - build

      - android_test:
          context:
            - Build
          requires:
            - build

      - coverage:
          requires:
            - build
            - build_ios

      - release:
          context:
            - Publish
          requires:
            - android_test
            - coverage
            - build_ios

      - build_docs:
          name: build-docs-main
          context:
            - Publish
          requires:
            - bazelrc

      - docs_release:
          context:
            - Publish
          requires:
            - setup

  full_release:
    when:
      equal: [release, << pipeline.parameters.GHA_Action >>]
    jobs:
      - setup

      - bazelrc:
          context:
            - Build
          requires:
            - setup

      - build:
          requires:
            - setup

      - build_ios:
          requires:
            - bazelrc

      - android_test:
          context:
            - Build
          requires:
            - build

      - coverage:
          requires:
            - build

      - release:
          context:
            - Publish
          requires:
            - android_test
            - coverage
            - build_ios
      - docs_release:
          context:
            - Publish
          requires:
            - setup
