common --enable_bzlmod
test --test_output=errors
coverage --combined_report=lcov

# TODO: Custom compiler version breaks embedded jdeps generator plugin - enable when removing custom kotlinc
build --@rules_kotlin//kotlin/settings:jvm_emit_jdeps=False
build --cxxopt=-std=c++17

# Android databinding flags
common --android_crosstool_top=@androidndk//:toolchain
common --experimental_android_databinding_v2
common --android_databinding_use_v3_4_args
common --android_databinding_use_androidx
common --experimental_google_legacy_api

# Android demo app flags
build --noincremental_dexing --fat_apk_cpu=armeabi-v7a,arm64-v8a,x86,x86_64
mobile-install --start=warm

build --bes_results_url=https://app.buildbuddy.io/invocation/
build --bes_backend=grpcs://remote.buildbuddy.io
build --remote_cache=grpcs://remote.buildbuddy.io
build --experimental_remote_cache_compression
build --experimental_remote_cache_async
build --remote_download_toplevel
build --remote_timeout=3600
build --build_metadata=REPO_URL=https://github.com/player-ui/player.git

test --bes_results_url=https://app.buildbuddy.io/invocation/
test --bes_backend=grpcs://remote.buildbuddy.io
test --remote_cache=grpcs://remote.buildbuddy.io
test --experimental_remote_cache_compression
test --experimental_remote_cache_async
test --remote_download_toplevel
test --remote_timeout=3600
test --build_metadata=REPO_URL=https://github.com/player-ui/player.git

coverage --bes_results_url=https://app.buildbuddy.io/invocation/
coverage --bes_backend=grpcs://remote.buildbuddy.io
coverage --remote_cache=grpcs://remote.buildbuddy.io
coverage --experimental_remote_cache_compression
coverage --experimental_remote_cache_async
coverage --remote_download_toplevel
coverage --remote_timeout=3600
coverage --build_metadata=REPO_URL=https://github.com/player-ui/player.git

common:ci --build_metadata=ROLE=CI --workspace_status_command=./scripts/workspace-status.sh

# Circle xlarge has 8 CPU cores/16GB mem
common:ci --local_cpu_resources=8
common:ci --local_ram_resources=15000
common:ci --config="release"
# Circle macos.m1.large.gen1 8 cores 12gb ram
common:ci-mac --config=ci --local_cpu_resources=8 --local_ram_resources=11000

build:release --stamp --workspace_status_command=./scripts/workspace-status.sh
build:release --//:cmake_build_type=MinSizeRel

# Cache action outputs on disk so they persist across output_base and bazel shutdown (eg. changing branches)
# build --disk_cache=~/.cache/bazel-disk-cache

# Support for debugging NodeJS tests
# Add the Bazel option `--config=debug` to enable this
# --test_output=streamed
#     Stream stdout/stderr output from each test in real-time.
#     See https://docs.bazel.build/versions/master/user-manual.html#flag--test_output for more details.
# --test_strategy=exclusive
#     Run one test at a time.
# --test_timeout=9999
#     Prevent long running tests from timing out
#     See https://docs.bazel.build/versions/master/user-manual.html#flag--test_timeout for more details.
# --nocache_test_results
#     Always run tests
# --node_options=--inspect-brk
#     Pass the --inspect-brk option to all tests which enables the node inspector agent.
#     See https://nodejs.org/de/docs/guides/debugging-getting-started/#command-line-options for more details.
# --define=VERBOSE_LOGS=1
#     Rules will output verbose logs if the VERBOSE_LOGS environment variable is set. `VERBOSE_LOGS` will be passed to
#     `nodejs_binary` and `nodejs_test` via the default value of the `default_env_vars` attribute of those rules.
# --compilation_mode=dbg
#     Rules may change their build outputs if the compilation mode is set to dbg. For example,
#     mininfiers such as terser may make their output more human readable when this is set. Rules will pass `COMPILATION_MODE`
#     to `nodejs_binary` executables via the actions.run env attribute.
#     See https://docs.bazel.build/versions/master/user-manual.html#flag--compilation_mode for more details.
test:debug --test_output=streamed --test_strategy=exclusive --test_timeout=9999 --nocache_test_results --define=VERBOSE_LOGS=1
# Use bazel run with `--config=debug` to turn on the NodeJS inspector agent.
# The node process will break before user code starts and wait for the debugger to connect.
run:debug --define=VERBOSE_LOGS=1 -- --node_options=--inspect-brk
# The following option will change the build output of certain rules such as terser and may not be desirable in all cases
build:debug --compilation_mode=dbg

build --@aspect_rules_ts//ts:skipLibCheck=always
fetch --@aspect_rules_ts//ts:skipLibCheck=always
query --@aspect_rules_ts//ts:skipLibCheck=always

try-import %workspace%/.bazelrc.local
